version: '3.7'

services:

  mysql-dallas:
    container_name: mysql-dallas
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db-dallas:/var/lib/mysql
    networks:
      - dallas

  vault:
    container_name: vault-dallas
    build:
      context: ./vault-dallas/vault
      dockerfile: Dockerfile
    ports:
      - 8200:8200
    volumes:
      - ./vault-dallas/vault/config:/vault/config
      - ./vault-dallas/vault/policies:/vault/policies
      - ./vault-dallas/vault/data:/vault/data
      - ./vault-dallas/vault/logs:/vault/logs
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_API_ADDR=http://127.0.0.1:8200
    command: server -config=./vault/config/vault-config.json
    cap_add:
      - IPC_LOCK
    networks:
      - dallas
 
  consul-server-dallas:
    image: hashicorp/consul:1.9.3
    container_name: consul-server-dallas
    restart: always
    volumes:
     - ./consul-dallas/server.json:/consul/config/server.json:ro
    networks:
      - dallas
    ports:
      - '8500:8500'
      - '8600:8600/tcp'
      - '8600:8600/udp'
    command: 'agent'

  consul-client-dallas:
    image: hashicorp/consul:1.9.3
    container_name: consul-client-dallas
    restart: always
    volumes:
      - .consul-dallas/client.json:/consul/config/client.json:ro
    networks:
      - dallas
    command: 'agent'

  mysql-aws:
    container_name: mysql-aws
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db-aws:/var/lib/mysql
    networks:
      - aws

  consul-server-aws:
    image: hashicorp/consul:1.9.3
    container_name: consul-server-aws
    restart: always
    volumes:
     - ./consul-aws/server.json:/consul/config/server.json:ro
    networks:
      - aws
    ports:
      - '8501:8500'
      - '8601:8600/tcp'
      - '8601:8600/udp'
    command: 'agent'

  consul-client-aws:
    image: hashicorp/consul:1.9.3
    container_name: consul-client-aws
    restart: always
    volumes:
     - ./consul-aws/client.json:/consul/config/client.json:ro
    networks:
      - aws
    command: 'agent'    


#  consul-worker:
#    build:
#      context: ./consul
#      dockerfile: Dockerfile
#    command: agent -server -join consul -config-file=/consul/config/config.json
#    volumes:
#      - ./consul/config/consul-config.json:/consul/config/config.json
#    depends_on:
#      - consul
#    networks:
#      - consul
#
#  consul:
#    build:
#      context: ./consul
#      dockerfile: Dockerfile
#    ports:
#      - 8500:8500
#    command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1 -config-file=/consul/config/config.json
#    volumes:
#      - ./consul/config/consul-config.json:/consul/config/config.json
#      - ./consul/data:/consul/data
#    networks:
#      - consul

# Names our volume
volumes:
  my-db-dallas:
  my-db-aws:

#networks:
#  default:
#    external:
#      name: cluster

networks:
  dallas:
    driver: bridge
  aws:
    driver: bridge

  